version: "3"

services:       #Services à exécuter
  apache_img_1:     #Premier serveur apache à démarrer / Service 1
    container_name: ${COMPOSE_PROJECT_NAME}_apache_con_1
    build: ./apache/1     #tag de l'image construite
    expose:               #Ports de notre service (port interne)
      - ${APACHE_EXPOSED_PORT}
    networks:
      public_net:           #Custom name
        ipv4_address: ${APACHE_1_IP}
  apache_img_2:       #Deuxième serveur apache à démarrer / Service 2
    container_name: ${COMPOSE_PROJECT_NAME}_apache_con_2
    build: ./apache/2
    expose:
      - ${APACHE_EXPOSED_PORT}
    networks:
      public_net:
        ipv4_address: ${APACHE_2_IP}
  haproxy:            #Service haproxy : load balancing + proxy pour TCP et applications HTTP
    build: ./haproxy  
    ports:
      - 80:80
    expose:
      - 80
    networks:
      public_net:
        ipv4_address: ${HA_PROXY_IP}
    environment:      #Passage de notre shell actuel aux services des conteneurs ci-dessous
      - APACHE_1_IP=${APACHE_1_IP}
      - APACHE_2_IP=${APACHE_2_IP}
      - APACHE_EXPOSED_PORT=${APACHE_EXPOSED_PORT}
  elasticsearch:        #service utilisé pour elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:6.3.2
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
  kibana:     #Service utilisé pour kibana
    image: docker.elastic.co/kibana/kibana:6.3.2
    ports:
      - "5601:5601"

networks:
  public_net:
    driver: bridge
    ipam:
      config:
        - subnet: ${NETWORK_SUBNET}
